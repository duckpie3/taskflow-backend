name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: python -m unittest backend_tests.py

      - name: Run installation tests
        run: python -m unittest test_backend.py

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      APP_VERSION: ${{ vars.APP_VERSION != '' && vars.APP_VERSION || format('0.0.{0}', github.run_number) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compose image tag
        id: meta
        run: |
          IMAGE_TAG="${APP_VERSION}-${GITHUB_RUN_NUMBER}"
          echo "image_tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"

      - name: Build Docker image
        run: |
          docker build \
            -t $REGISTRY/$IMAGE_NAME:${{ steps.meta.outputs.image_tag }} \
            .

      - name: Push Docker image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ steps.meta.outputs.image_tag }}
